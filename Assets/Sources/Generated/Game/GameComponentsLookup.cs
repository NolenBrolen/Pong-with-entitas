//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentsLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int AllComponents = 0;
    public const int Asset = 1;
    public const int Ball = 2;
    public const int Collision = 3;
    public const int Delay = 4;
    public const int DelayNewRound = 5;
    public const int DelaySettings = 6;
    public const int Destroy = 7;
    public const int HorizontalWall = 8;
    public const int InitialBallVelocity = 9;
    public const int LeftWall = 10;
    public const int Move = 11;
    public const int MovingDirection = 12;
    public const int NewGameButton = 13;
    public const int Player1 = 14;
    public const int Player1Score = 15;
    public const int Player1Winner = 16;
    public const int Player2 = 17;
    public const int Player2Score = 18;
    public const int Player2Winner = 19;
    public const int Position = 20;
    public const int ResetPosition = 21;
    public const int RightWall = 22;
    public const int ScoreLeft = 23;
    public const int ScoreRight = 24;
    public const int Speed = 25;
    public const int StartNewRound = 26;
    public const int Text = 27;
    public const int TimeUntilNewRound = 28;
    public const int TimeUntilResetPositions = 29;
    public const int Trigger = 30;
    public const int TriggerWallHit = 31;
    public const int UiElement = 32;
    public const int UiRoot = 33;
    public const int Velocity = 34;
    public const int VerticalWall = 35;
    public const int View = 36;
    public const int Wall = 37;

    public const int TotalComponents = 38;

    public static readonly string[] componentNames = {
        "AllComponents",
        "Asset",
        "Ball",
        "Collision",
        "Delay",
        "DelayNewRound",
        "DelaySettings",
        "Destroy",
        "HorizontalWall",
        "InitialBallVelocity",
        "LeftWall",
        "Move",
        "MovingDirection",
        "NewGameButton",
        "Player1",
        "Player1Score",
        "Player1Winner",
        "Player2",
        "Player2Score",
        "Player2Winner",
        "Position",
        "ResetPosition",
        "RightWall",
        "ScoreLeft",
        "ScoreRight",
        "Speed",
        "StartNewRound",
        "Text",
        "TimeUntilNewRound",
        "TimeUntilResetPositions",
        "Trigger",
        "TriggerWallHit",
        "UiElement",
        "UiRoot",
        "Velocity",
        "VerticalWall",
        "View",
        "Wall"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(AllComponents),
        typeof(AssetComponent),
        typeof(BallComponent),
        typeof(CollisionComponent),
        typeof(DelayComponent),
        typeof(DelayNewRoundComponent),
        typeof(DelaySettingsComponent),
        typeof(DestroyComponent),
        typeof(HorizontalWallComponent),
        typeof(InitialBallVelocityComponent),
        typeof(LeftWall),
        typeof(MoveComponent),
        typeof(MovingDirection),
        typeof(NewGameButtonComponent),
        typeof(Player1Component),
        typeof(Player1Score),
        typeof(Player1WinnerComponent),
        typeof(Player2Component),
        typeof(Player2Score),
        typeof(Player2WinnerComponent),
        typeof(PositionComponent),
        typeof(ResetPositionComponent),
        typeof(RightWall),
        typeof(ScoreLeft),
        typeof(ScoreRight),
        typeof(SpeedComponent),
        typeof(StartNewRoundComponent),
        typeof(TextComponent),
        typeof(TimeUntilNewRoundComponent),
        typeof(TimeUntilResetPositionsComponent),
        typeof(TriggerComponent),
        typeof(TriggerWallHit),
        typeof(UiElementComponent),
        typeof(UiRoot),
        typeof(Velocity),
        typeof(VerticalWallComponent),
        typeof(ViewComponent),
        typeof(Wall)
    };
}
