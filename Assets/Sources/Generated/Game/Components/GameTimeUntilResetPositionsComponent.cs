//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity timeUntilResetPositionsEntity { get { return GetGroup(GameMatcher.TimeUntilResetPositions).GetSingleEntity(); } }
    public TimeUntilResetPositionsComponent timeUntilResetPositions { get { return timeUntilResetPositionsEntity.timeUntilResetPositions; } }
    public bool hasTimeUntilResetPositions { get { return timeUntilResetPositionsEntity != null; } }

    public GameEntity SetTimeUntilResetPositions(float newValue) {
        if (hasTimeUntilResetPositions) {
            throw new Entitas.EntitasException("Could not set TimeUntilResetPositions!\n" + this + " already has an entity with TimeUntilResetPositionsComponent!",
                "You should check if the context already has a timeUntilResetPositionsEntity before setting it or use context.ReplaceTimeUntilResetPositions().");
        }
        var entity = CreateEntity();
        entity.AddTimeUntilResetPositions(newValue);
        return entity;
    }

    public void ReplaceTimeUntilResetPositions(float newValue) {
        var entity = timeUntilResetPositionsEntity;
        if (entity == null) {
            entity = SetTimeUntilResetPositions(newValue);
        } else {
            entity.ReplaceTimeUntilResetPositions(newValue);
        }
    }

    public void RemoveTimeUntilResetPositions() {
        timeUntilResetPositionsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TimeUntilResetPositionsComponent timeUntilResetPositions { get { return (TimeUntilResetPositionsComponent)GetComponent(GameComponentsLookup.TimeUntilResetPositions); } }
    public bool hasTimeUntilResetPositions { get { return HasComponent(GameComponentsLookup.TimeUntilResetPositions); } }

    public void AddTimeUntilResetPositions(float newValue) {
        var index = GameComponentsLookup.TimeUntilResetPositions;
        var component = CreateComponent<TimeUntilResetPositionsComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTimeUntilResetPositions(float newValue) {
        var index = GameComponentsLookup.TimeUntilResetPositions;
        var component = CreateComponent<TimeUntilResetPositionsComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeUntilResetPositions() {
        RemoveComponent(GameComponentsLookup.TimeUntilResetPositions);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTimeUntilResetPositions;

    public static Entitas.IMatcher<GameEntity> TimeUntilResetPositions {
        get {
            if (_matcherTimeUntilResetPositions == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TimeUntilResetPositions);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTimeUntilResetPositions = matcher;
            }

            return _matcherTimeUntilResetPositions;
        }
    }
}
