//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity initialBallVelocityEntity { get { return GetGroup(GameMatcher.InitialBallVelocity).GetSingleEntity(); } }
    public InitialBallVelocityComponent initialBallVelocity { get { return initialBallVelocityEntity.initialBallVelocity; } }
    public bool hasInitialBallVelocity { get { return initialBallVelocityEntity != null; } }

    public GameEntity SetInitialBallVelocity(UnityEngine.Vector2 newValue) {
        if (hasInitialBallVelocity) {
            throw new Entitas.EntitasException("Could not set InitialBallVelocity!\n" + this + " already has an entity with InitialBallVelocityComponent!",
                "You should check if the context already has a initialBallVelocityEntity before setting it or use context.ReplaceInitialBallVelocity().");
        }
        var entity = CreateEntity();
        entity.AddInitialBallVelocity(newValue);
        return entity;
    }

    public void ReplaceInitialBallVelocity(UnityEngine.Vector2 newValue) {
        var entity = initialBallVelocityEntity;
        if (entity == null) {
            entity = SetInitialBallVelocity(newValue);
        } else {
            entity.ReplaceInitialBallVelocity(newValue);
        }
    }

    public void RemoveInitialBallVelocity() {
        initialBallVelocityEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InitialBallVelocityComponent initialBallVelocity { get { return (InitialBallVelocityComponent)GetComponent(GameComponentsLookup.InitialBallVelocity); } }
    public bool hasInitialBallVelocity { get { return HasComponent(GameComponentsLookup.InitialBallVelocity); } }

    public void AddInitialBallVelocity(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.InitialBallVelocity;
        var component = CreateComponent<InitialBallVelocityComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInitialBallVelocity(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.InitialBallVelocity;
        var component = CreateComponent<InitialBallVelocityComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInitialBallVelocity() {
        RemoveComponent(GameComponentsLookup.InitialBallVelocity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInitialBallVelocity;

    public static Entitas.IMatcher<GameEntity> InitialBallVelocity {
        get {
            if (_matcherInitialBallVelocity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InitialBallVelocity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInitialBallVelocity = matcher;
            }

            return _matcherInitialBallVelocity;
        }
    }
}
