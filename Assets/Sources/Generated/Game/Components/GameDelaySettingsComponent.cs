//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity delaySettingsEntity { get { return GetGroup(GameMatcher.DelaySettings).GetSingleEntity(); } }
    public DelaySettingsComponent delaySettings { get { return delaySettingsEntity.delaySettings; } }
    public bool hasDelaySettings { get { return delaySettingsEntity != null; } }

    public GameEntity SetDelaySettings(float newNewRoundDelay, float newResetPositionDelay) {
        if (hasDelaySettings) {
            throw new Entitas.EntitasException("Could not set DelaySettings!\n" + this + " already has an entity with DelaySettingsComponent!",
                "You should check if the context already has a delaySettingsEntity before setting it or use context.ReplaceDelaySettings().");
        }
        var entity = CreateEntity();
        entity.AddDelaySettings(newNewRoundDelay, newResetPositionDelay);
        return entity;
    }

    public void ReplaceDelaySettings(float newNewRoundDelay, float newResetPositionDelay) {
        var entity = delaySettingsEntity;
        if (entity == null) {
            entity = SetDelaySettings(newNewRoundDelay, newResetPositionDelay);
        } else {
            entity.ReplaceDelaySettings(newNewRoundDelay, newResetPositionDelay);
        }
    }

    public void RemoveDelaySettings() {
        delaySettingsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DelaySettingsComponent delaySettings { get { return (DelaySettingsComponent)GetComponent(GameComponentsLookup.DelaySettings); } }
    public bool hasDelaySettings { get { return HasComponent(GameComponentsLookup.DelaySettings); } }

    public void AddDelaySettings(float newNewRoundDelay, float newResetPositionDelay) {
        var index = GameComponentsLookup.DelaySettings;
        var component = CreateComponent<DelaySettingsComponent>(index);
        component.newRoundDelay = newNewRoundDelay;
        component.resetPositionDelay = newResetPositionDelay;
        AddComponent(index, component);
    }

    public void ReplaceDelaySettings(float newNewRoundDelay, float newResetPositionDelay) {
        var index = GameComponentsLookup.DelaySettings;
        var component = CreateComponent<DelaySettingsComponent>(index);
        component.newRoundDelay = newNewRoundDelay;
        component.resetPositionDelay = newResetPositionDelay;
        ReplaceComponent(index, component);
    }

    public void RemoveDelaySettings() {
        RemoveComponent(GameComponentsLookup.DelaySettings);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDelaySettings;

    public static Entitas.IMatcher<GameEntity> DelaySettings {
        get {
            if (_matcherDelaySettings == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DelaySettings);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDelaySettings = matcher;
            }

            return _matcherDelaySettings;
        }
    }
}
